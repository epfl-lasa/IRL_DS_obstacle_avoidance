#! /usr/bin/env python


# Initialize ros and import parameter generator
PACKAGE='mouse_perturbation_robot'
import roslib
roslib.load_manifest(PACKAGE)

from dynamic_reconfigure.parameter_generator_catkin import *

gen = ParameterGenerator()

# Add parameters
#       Name     Type    Level Description     	Default 	Min   	Max
gen.add("perturbation_flag", bool_t, 0, "Set true if you want perturbations", False)
gen.add("random_trajectory_switching", bool_t, 0, "Set true if you want trajectories to vary", False)
gen.add("obstacle_shape_param", int_t, 0, "Increase to make the object more squarish",1, 1, 2)
gen.add("obstacle_safety_factor", double_t, 0, "Margin of safety", 1.1, 1.0, 1.5)
gen.add("obstacle_rho", double_t, 0, "Increase for earlier response", 1.1, 1.0, 8.0)
gen.add("jerky_motion_duration", double_t, 0, "Increase for longer-lasting perturbations", 0.4, 0.0, 1.0)
# gen.add("pause_duration", double_t, 0, "Increase for longer pauses", 0.4, 0.0, 2.0)
gen.add("lag_duration", double_t, 0, "Increase for longer lags on mouse", 0.3, 0.0, 2.0)
# gen.add("trajectory_1", bool_t, 0, "Close and smooth", False)
# gen.add("trajectory_2", bool_t, 0, "Large margin and smooth", False)
# gen.add("trajectory_3", bool_t, 0, "Close and abrupt", False)


# Generate files
exit(gen.generate(PACKAGE, "dynamic_reconfigure_node", "obstacleAvoidance_params"))